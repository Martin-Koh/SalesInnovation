//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.237
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace SlvHanbaiClient.svcMstData {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityBase", Namespace="http://schemas.datacontract.org/2004/07/SlvHanbai.Web.Class.Entity")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SlvHanbaiClient.svcMstData.EntityMstList))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SlvHanbaiClient.svcMstData.EntityMstData))]
    public partial class EntityBase : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityMstList", Namespace="http://schemas.datacontract.org/2004/07/SlvHanbai.Web.Class.Entity")]
    public partial class EntityMstList : SlvHanbaiClient.svcMstData.EntityBase {
        
        private string attribute1Field;
        
        private string attribute2Field;
        
        private string attribute3Field;
        
        private string idField;
        
        private string messageField;
        
        private string nameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string attribute1 {
            get {
                return this.attribute1Field;
            }
            set {
                if ((object.ReferenceEquals(this.attribute1Field, value) != true)) {
                    this.attribute1Field = value;
                    this.RaisePropertyChanged("attribute1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string attribute2 {
            get {
                return this.attribute2Field;
            }
            set {
                if ((object.ReferenceEquals(this.attribute2Field, value) != true)) {
                    this.attribute2Field = value;
                    this.RaisePropertyChanged("attribute2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string attribute3 {
            get {
                return this.attribute3Field;
            }
            set {
                if ((object.ReferenceEquals(this.attribute3Field, value) != true)) {
                    this.attribute3Field = value;
                    this.RaisePropertyChanged("attribute3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string id {
            get {
                return this.idField;
            }
            set {
                if ((object.ReferenceEquals(this.idField, value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string message {
            get {
                return this.messageField;
            }
            set {
                if ((object.ReferenceEquals(this.messageField, value) != true)) {
                    this.messageField = value;
                    this.RaisePropertyChanged("message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityMstData", Namespace="http://schemas.datacontract.org/2004/07/SlvHanbai.Web.Class.Entity")]
    public partial class EntityMstData : SlvHanbaiClient.svcMstData.EntityBase {
        
        private string attribute1Field;
        
        private string attribute10Field;
        
        private string attribute11Field;
        
        private string attribute12Field;
        
        private string attribute13Field;
        
        private string attribute14Field;
        
        private string attribute15Field;
        
        private string attribute16Field;
        
        private string attribute17Field;
        
        private string attribute18Field;
        
        private string attribute19Field;
        
        private string attribute2Field;
        
        private string attribute20Field;
        
        private string attribute3Field;
        
        private string attribute4Field;
        
        private string attribute5Field;
        
        private string attribute6Field;
        
        private string attribute7Field;
        
        private string attribute8Field;
        
        private string attribute9Field;
        
        private string idField;
        
        private string messageField;
        
        private string nameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string attribute1 {
            get {
                return this.attribute1Field;
            }
            set {
                if ((object.ReferenceEquals(this.attribute1Field, value) != true)) {
                    this.attribute1Field = value;
                    this.RaisePropertyChanged("attribute1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string attribute10 {
            get {
                return this.attribute10Field;
            }
            set {
                if ((object.ReferenceEquals(this.attribute10Field, value) != true)) {
                    this.attribute10Field = value;
                    this.RaisePropertyChanged("attribute10");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string attribute11 {
            get {
                return this.attribute11Field;
            }
            set {
                if ((object.ReferenceEquals(this.attribute11Field, value) != true)) {
                    this.attribute11Field = value;
                    this.RaisePropertyChanged("attribute11");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string attribute12 {
            get {
                return this.attribute12Field;
            }
            set {
                if ((object.ReferenceEquals(this.attribute12Field, value) != true)) {
                    this.attribute12Field = value;
                    this.RaisePropertyChanged("attribute12");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string attribute13 {
            get {
                return this.attribute13Field;
            }
            set {
                if ((object.ReferenceEquals(this.attribute13Field, value) != true)) {
                    this.attribute13Field = value;
                    this.RaisePropertyChanged("attribute13");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string attribute14 {
            get {
                return this.attribute14Field;
            }
            set {
                if ((object.ReferenceEquals(this.attribute14Field, value) != true)) {
                    this.attribute14Field = value;
                    this.RaisePropertyChanged("attribute14");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string attribute15 {
            get {
                return this.attribute15Field;
            }
            set {
                if ((object.ReferenceEquals(this.attribute15Field, value) != true)) {
                    this.attribute15Field = value;
                    this.RaisePropertyChanged("attribute15");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string attribute16 {
            get {
                return this.attribute16Field;
            }
            set {
                if ((object.ReferenceEquals(this.attribute16Field, value) != true)) {
                    this.attribute16Field = value;
                    this.RaisePropertyChanged("attribute16");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string attribute17 {
            get {
                return this.attribute17Field;
            }
            set {
                if ((object.ReferenceEquals(this.attribute17Field, value) != true)) {
                    this.attribute17Field = value;
                    this.RaisePropertyChanged("attribute17");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string attribute18 {
            get {
                return this.attribute18Field;
            }
            set {
                if ((object.ReferenceEquals(this.attribute18Field, value) != true)) {
                    this.attribute18Field = value;
                    this.RaisePropertyChanged("attribute18");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string attribute19 {
            get {
                return this.attribute19Field;
            }
            set {
                if ((object.ReferenceEquals(this.attribute19Field, value) != true)) {
                    this.attribute19Field = value;
                    this.RaisePropertyChanged("attribute19");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string attribute2 {
            get {
                return this.attribute2Field;
            }
            set {
                if ((object.ReferenceEquals(this.attribute2Field, value) != true)) {
                    this.attribute2Field = value;
                    this.RaisePropertyChanged("attribute2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string attribute20 {
            get {
                return this.attribute20Field;
            }
            set {
                if ((object.ReferenceEquals(this.attribute20Field, value) != true)) {
                    this.attribute20Field = value;
                    this.RaisePropertyChanged("attribute20");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string attribute3 {
            get {
                return this.attribute3Field;
            }
            set {
                if ((object.ReferenceEquals(this.attribute3Field, value) != true)) {
                    this.attribute3Field = value;
                    this.RaisePropertyChanged("attribute3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string attribute4 {
            get {
                return this.attribute4Field;
            }
            set {
                if ((object.ReferenceEquals(this.attribute4Field, value) != true)) {
                    this.attribute4Field = value;
                    this.RaisePropertyChanged("attribute4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string attribute5 {
            get {
                return this.attribute5Field;
            }
            set {
                if ((object.ReferenceEquals(this.attribute5Field, value) != true)) {
                    this.attribute5Field = value;
                    this.RaisePropertyChanged("attribute5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string attribute6 {
            get {
                return this.attribute6Field;
            }
            set {
                if ((object.ReferenceEquals(this.attribute6Field, value) != true)) {
                    this.attribute6Field = value;
                    this.RaisePropertyChanged("attribute6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string attribute7 {
            get {
                return this.attribute7Field;
            }
            set {
                if ((object.ReferenceEquals(this.attribute7Field, value) != true)) {
                    this.attribute7Field = value;
                    this.RaisePropertyChanged("attribute7");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string attribute8 {
            get {
                return this.attribute8Field;
            }
            set {
                if ((object.ReferenceEquals(this.attribute8Field, value) != true)) {
                    this.attribute8Field = value;
                    this.RaisePropertyChanged("attribute8");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string attribute9 {
            get {
                return this.attribute9Field;
            }
            set {
                if ((object.ReferenceEquals(this.attribute9Field, value) != true)) {
                    this.attribute9Field = value;
                    this.RaisePropertyChanged("attribute9");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string id {
            get {
                return this.idField;
            }
            set {
                if ((object.ReferenceEquals(this.idField, value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string message {
            get {
                return this.messageField;
            }
            set {
                if ((object.ReferenceEquals(this.messageField, value) != true)) {
                    this.messageField = value;
                    this.RaisePropertyChanged("message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="svcMstData.svcMstData")]
    public interface svcMstData {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:svcMstData/GetSupplier", ReplyAction="urn:svcMstData/GetSupplierResponse")]
        System.IAsyncResult BeginGetSupplier(string random, string CustomerID, string ID, System.AsyncCallback callback, object asyncState);
        
        SlvHanbaiClient.svcMstData.EntityMstData EndGetSupplier(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:svcMstData/GetCustomer", ReplyAction="urn:svcMstData/GetCustomerResponse")]
        System.IAsyncResult BeginGetCustomer(string random, string ID, System.AsyncCallback callback, object asyncState);
        
        SlvHanbaiClient.svcMstData.EntityMstData EndGetCustomer(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:svcMstData/GetPerson", ReplyAction="urn:svcMstData/GetPersonResponse")]
        System.IAsyncResult BeginGetPerson(string random, string ID, System.AsyncCallback callback, object asyncState);
        
        SlvHanbaiClient.svcMstData.EntityMstData EndGetPerson(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:svcMstData/GetCommodity", ReplyAction="urn:svcMstData/GetCommodityResponse")]
        System.IAsyncResult BeginGetCommodity(string random, string ID, string dataGirdSelectedIndex, System.AsyncCallback callback, object asyncState);
        
        SlvHanbaiClient.svcMstData.EntityMstData EndGetCommodity(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:svcMstData/GetCompanyGroup", ReplyAction="urn:svcMstData/GetCompanyGroupResponse")]
        System.IAsyncResult BeginGetCompanyGroup(string random, string ID, System.AsyncCallback callback, object asyncState);
        
        SlvHanbaiClient.svcMstData.EntityMstData EndGetCompanyGroup(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:svcMstData/GetZip", ReplyAction="urn:svcMstData/GetZipResponse")]
        System.IAsyncResult BeginGetZip(string random, string zipFrom, string zipTo, System.AsyncCallback callback, object asyncState);
        
        SlvHanbaiClient.svcMstData.EntityMstData EndGetZip(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:svcMstData/GetCondition", ReplyAction="urn:svcMstData/GetConditionResponse")]
        System.IAsyncResult BeginGetCondition(string random, int kbn, string ID, System.AsyncCallback callback, object asyncState);
        
        SlvHanbaiClient.svcMstData.EntityMstData EndGetCondition(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:svcMstData/GetReceitpDivision", ReplyAction="urn:svcMstData/GetReceitpDivisionResponse")]
        System.IAsyncResult BeginGetReceitpDivision(string random, string ID, string dataGirdSelectedIndex, System.AsyncCallback callback, object asyncState);
        
        SlvHanbaiClient.svcMstData.EntityMstData EndGetReceitpDivision(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:svcMstData/GetGroup", ReplyAction="urn:svcMstData/GetGroupResponse")]
        System.IAsyncResult BeginGetGroup(string random, int kbn, string ID, System.AsyncCallback callback, object asyncState);
        
        SlvHanbaiClient.svcMstData.EntityMstData EndGetGroup(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:svcMstData/GetPurchase", ReplyAction="urn:svcMstData/GetPurchaseResponse")]
        System.IAsyncResult BeginGetPurchase(string random, string ID, System.AsyncCallback callback, object asyncState);
        
        SlvHanbaiClient.svcMstData.EntityMstData EndGetPurchase(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:svcMstData/GetSupplierList", ReplyAction="urn:svcMstData/GetSupplierListResponse")]
        System.IAsyncResult BeginGetSupplierList(string random, string CustomerID, string ID, string Name, string Kana, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> EndGetSupplierList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:svcMstData/GetCustomerList", ReplyAction="urn:svcMstData/GetCustomerListResponse")]
        System.IAsyncResult BeginGetCustomerList(string random, string ID, string Name, string Kana, string GroupID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> EndGetCustomerList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:svcMstData/GetPersonList", ReplyAction="urn:svcMstData/GetPersonListResponse")]
        System.IAsyncResult BeginGetPersonList(string random, string ID, string Name, string Kana, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> EndGetPersonList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:svcMstData/GetCommodityList", ReplyAction="urn:svcMstData/GetCommodityListResponse")]
        System.IAsyncResult BeginGetCommodityList(string random, string ID, string Name, string Kana, string GroupID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> EndGetCommodityList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:svcMstData/GetCompanyGroupList", ReplyAction="urn:svcMstData/GetCompanyGroupListResponse")]
        System.IAsyncResult BeginGetCompanyGroupList(string random, string ID, string Name, string Kana, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> EndGetCompanyGroupList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:svcMstData/GetZipList", ReplyAction="urn:svcMstData/GetZipListResponse")]
        System.IAsyncResult BeginGetZipList(string random, string zipFrom, string zipTo, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> EndGetZipList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:svcMstData/GetConditionList", ReplyAction="urn:svcMstData/GetConditionListResponse")]
        System.IAsyncResult BeginGetConditionList(string random, int kbn, string ID, string Name, string Kana, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> EndGetConditionList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:svcMstData/GetReceitpDivisionList", ReplyAction="urn:svcMstData/GetReceitpDivisionListResponse")]
        System.IAsyncResult BeginGetReceitpDivisionList(string random, string ID, string Name, string Kana, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> EndGetReceitpDivisionList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:svcMstData/GetGroupList", ReplyAction="urn:svcMstData/GetGroupListResponse")]
        System.IAsyncResult BeginGetGroupList(string random, int kbn, string ID, string Name, string Kana, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> EndGetGroupList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:svcMstData/GetPurchaseList", ReplyAction="urn:svcMstData/GetPurchaseListResponse")]
        System.IAsyncResult BeginGetPurchaseList(string random, string ID, string Name, string Kana, string GroupID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> EndGetPurchaseList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:svcMstData/GetUserList", ReplyAction="urn:svcMstData/GetUserListResponse")]
        System.IAsyncResult BeginGetUserList(string random, string ID, string Name, string Kana, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> EndGetUserList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:svcMstData/GetInventoryList", ReplyAction="urn:svcMstData/GetInventoryListResponse")]
        System.IAsyncResult BeginGetInventoryList(string random, string ID, string Name, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> EndGetInventoryList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:svcMstData/GetSalesBalanceList", ReplyAction="urn:svcMstData/GetSalesBalanceListResponse")]
        System.IAsyncResult BeginGetSalesBalanceList(string random, string ID, string Name, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> EndGetSalesBalanceList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:svcMstData/GetPaymentBalanceList", ReplyAction="urn:svcMstData/GetPaymentBalanceListResponse")]
        System.IAsyncResult BeginGetPaymentBalanceList(string random, string ID, string Name, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> EndGetPaymentBalanceList(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface svcMstDataChannel : SlvHanbaiClient.svcMstData.svcMstData, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSupplierCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSupplierCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SlvHanbaiClient.svcMstData.EntityMstData Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SlvHanbaiClient.svcMstData.EntityMstData)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SlvHanbaiClient.svcMstData.EntityMstData Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SlvHanbaiClient.svcMstData.EntityMstData)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPersonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPersonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SlvHanbaiClient.svcMstData.EntityMstData Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SlvHanbaiClient.svcMstData.EntityMstData)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCommodityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCommodityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SlvHanbaiClient.svcMstData.EntityMstData Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SlvHanbaiClient.svcMstData.EntityMstData)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCompanyGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCompanyGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SlvHanbaiClient.svcMstData.EntityMstData Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SlvHanbaiClient.svcMstData.EntityMstData)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetZipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetZipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SlvHanbaiClient.svcMstData.EntityMstData Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SlvHanbaiClient.svcMstData.EntityMstData)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetConditionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetConditionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SlvHanbaiClient.svcMstData.EntityMstData Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SlvHanbaiClient.svcMstData.EntityMstData)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetReceitpDivisionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetReceitpDivisionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SlvHanbaiClient.svcMstData.EntityMstData Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SlvHanbaiClient.svcMstData.EntityMstData)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SlvHanbaiClient.svcMstData.EntityMstData Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SlvHanbaiClient.svcMstData.EntityMstData)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPurchaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPurchaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SlvHanbaiClient.svcMstData.EntityMstData Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SlvHanbaiClient.svcMstData.EntityMstData)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSupplierListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSupplierListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCustomerListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCustomerListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPersonListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPersonListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCommodityListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCommodityListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCompanyGroupListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCompanyGroupListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetZipListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetZipListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetConditionListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetConditionListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetReceitpDivisionListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetReceitpDivisionListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetGroupListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetGroupListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPurchaseListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPurchaseListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUserListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUserListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetInventoryListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetInventoryListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSalesBalanceListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSalesBalanceListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPaymentBalanceListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPaymentBalanceListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class svcMstDataClient : System.ServiceModel.ClientBase<SlvHanbaiClient.svcMstData.svcMstData>, SlvHanbaiClient.svcMstData.svcMstData {
        
        private BeginOperationDelegate onBeginGetSupplierDelegate;
        
        private EndOperationDelegate onEndGetSupplierDelegate;
        
        private System.Threading.SendOrPostCallback onGetSupplierCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCustomerDelegate;
        
        private EndOperationDelegate onEndGetCustomerDelegate;
        
        private System.Threading.SendOrPostCallback onGetCustomerCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPersonDelegate;
        
        private EndOperationDelegate onEndGetPersonDelegate;
        
        private System.Threading.SendOrPostCallback onGetPersonCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCommodityDelegate;
        
        private EndOperationDelegate onEndGetCommodityDelegate;
        
        private System.Threading.SendOrPostCallback onGetCommodityCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCompanyGroupDelegate;
        
        private EndOperationDelegate onEndGetCompanyGroupDelegate;
        
        private System.Threading.SendOrPostCallback onGetCompanyGroupCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetZipDelegate;
        
        private EndOperationDelegate onEndGetZipDelegate;
        
        private System.Threading.SendOrPostCallback onGetZipCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetConditionDelegate;
        
        private EndOperationDelegate onEndGetConditionDelegate;
        
        private System.Threading.SendOrPostCallback onGetConditionCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetReceitpDivisionDelegate;
        
        private EndOperationDelegate onEndGetReceitpDivisionDelegate;
        
        private System.Threading.SendOrPostCallback onGetReceitpDivisionCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetGroupDelegate;
        
        private EndOperationDelegate onEndGetGroupDelegate;
        
        private System.Threading.SendOrPostCallback onGetGroupCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPurchaseDelegate;
        
        private EndOperationDelegate onEndGetPurchaseDelegate;
        
        private System.Threading.SendOrPostCallback onGetPurchaseCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSupplierListDelegate;
        
        private EndOperationDelegate onEndGetSupplierListDelegate;
        
        private System.Threading.SendOrPostCallback onGetSupplierListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCustomerListDelegate;
        
        private EndOperationDelegate onEndGetCustomerListDelegate;
        
        private System.Threading.SendOrPostCallback onGetCustomerListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPersonListDelegate;
        
        private EndOperationDelegate onEndGetPersonListDelegate;
        
        private System.Threading.SendOrPostCallback onGetPersonListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCommodityListDelegate;
        
        private EndOperationDelegate onEndGetCommodityListDelegate;
        
        private System.Threading.SendOrPostCallback onGetCommodityListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCompanyGroupListDelegate;
        
        private EndOperationDelegate onEndGetCompanyGroupListDelegate;
        
        private System.Threading.SendOrPostCallback onGetCompanyGroupListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetZipListDelegate;
        
        private EndOperationDelegate onEndGetZipListDelegate;
        
        private System.Threading.SendOrPostCallback onGetZipListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetConditionListDelegate;
        
        private EndOperationDelegate onEndGetConditionListDelegate;
        
        private System.Threading.SendOrPostCallback onGetConditionListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetReceitpDivisionListDelegate;
        
        private EndOperationDelegate onEndGetReceitpDivisionListDelegate;
        
        private System.Threading.SendOrPostCallback onGetReceitpDivisionListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetGroupListDelegate;
        
        private EndOperationDelegate onEndGetGroupListDelegate;
        
        private System.Threading.SendOrPostCallback onGetGroupListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPurchaseListDelegate;
        
        private EndOperationDelegate onEndGetPurchaseListDelegate;
        
        private System.Threading.SendOrPostCallback onGetPurchaseListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUserListDelegate;
        
        private EndOperationDelegate onEndGetUserListDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetInventoryListDelegate;
        
        private EndOperationDelegate onEndGetInventoryListDelegate;
        
        private System.Threading.SendOrPostCallback onGetInventoryListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSalesBalanceListDelegate;
        
        private EndOperationDelegate onEndGetSalesBalanceListDelegate;
        
        private System.Threading.SendOrPostCallback onGetSalesBalanceListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPaymentBalanceListDelegate;
        
        private EndOperationDelegate onEndGetPaymentBalanceListDelegate;
        
        private System.Threading.SendOrPostCallback onGetPaymentBalanceListCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public svcMstDataClient() {
        }
        
        public svcMstDataClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public svcMstDataClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public svcMstDataClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public svcMstDataClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("CookieContainer を設定できません。バインドに HttpCookieContainerBindingElement が含まれていることを確認してくだ" +
                            "さい。");
                }
            }
        }
        
        public event System.EventHandler<GetSupplierCompletedEventArgs> GetSupplierCompleted;
        
        public event System.EventHandler<GetCustomerCompletedEventArgs> GetCustomerCompleted;
        
        public event System.EventHandler<GetPersonCompletedEventArgs> GetPersonCompleted;
        
        public event System.EventHandler<GetCommodityCompletedEventArgs> GetCommodityCompleted;
        
        public event System.EventHandler<GetCompanyGroupCompletedEventArgs> GetCompanyGroupCompleted;
        
        public event System.EventHandler<GetZipCompletedEventArgs> GetZipCompleted;
        
        public event System.EventHandler<GetConditionCompletedEventArgs> GetConditionCompleted;
        
        public event System.EventHandler<GetReceitpDivisionCompletedEventArgs> GetReceitpDivisionCompleted;
        
        public event System.EventHandler<GetGroupCompletedEventArgs> GetGroupCompleted;
        
        public event System.EventHandler<GetPurchaseCompletedEventArgs> GetPurchaseCompleted;
        
        public event System.EventHandler<GetSupplierListCompletedEventArgs> GetSupplierListCompleted;
        
        public event System.EventHandler<GetCustomerListCompletedEventArgs> GetCustomerListCompleted;
        
        public event System.EventHandler<GetPersonListCompletedEventArgs> GetPersonListCompleted;
        
        public event System.EventHandler<GetCommodityListCompletedEventArgs> GetCommodityListCompleted;
        
        public event System.EventHandler<GetCompanyGroupListCompletedEventArgs> GetCompanyGroupListCompleted;
        
        public event System.EventHandler<GetZipListCompletedEventArgs> GetZipListCompleted;
        
        public event System.EventHandler<GetConditionListCompletedEventArgs> GetConditionListCompleted;
        
        public event System.EventHandler<GetReceitpDivisionListCompletedEventArgs> GetReceitpDivisionListCompleted;
        
        public event System.EventHandler<GetGroupListCompletedEventArgs> GetGroupListCompleted;
        
        public event System.EventHandler<GetPurchaseListCompletedEventArgs> GetPurchaseListCompleted;
        
        public event System.EventHandler<GetUserListCompletedEventArgs> GetUserListCompleted;
        
        public event System.EventHandler<GetInventoryListCompletedEventArgs> GetInventoryListCompleted;
        
        public event System.EventHandler<GetSalesBalanceListCompletedEventArgs> GetSalesBalanceListCompleted;
        
        public event System.EventHandler<GetPaymentBalanceListCompletedEventArgs> GetPaymentBalanceListCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SlvHanbaiClient.svcMstData.svcMstData.BeginGetSupplier(string random, string CustomerID, string ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSupplier(random, CustomerID, ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SlvHanbaiClient.svcMstData.EntityMstData SlvHanbaiClient.svcMstData.svcMstData.EndGetSupplier(System.IAsyncResult result) {
            return base.Channel.EndGetSupplier(result);
        }
        
        private System.IAsyncResult OnBeginGetSupplier(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string random = ((string)(inValues[0]));
            string CustomerID = ((string)(inValues[1]));
            string ID = ((string)(inValues[2]));
            return ((SlvHanbaiClient.svcMstData.svcMstData)(this)).BeginGetSupplier(random, CustomerID, ID, callback, asyncState);
        }
        
        private object[] OnEndGetSupplier(System.IAsyncResult result) {
            SlvHanbaiClient.svcMstData.EntityMstData retVal = ((SlvHanbaiClient.svcMstData.svcMstData)(this)).EndGetSupplier(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSupplierCompleted(object state) {
            if ((this.GetSupplierCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSupplierCompleted(this, new GetSupplierCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSupplierAsync(string random, string CustomerID, string ID) {
            this.GetSupplierAsync(random, CustomerID, ID, null);
        }
        
        public void GetSupplierAsync(string random, string CustomerID, string ID, object userState) {
            if ((this.onBeginGetSupplierDelegate == null)) {
                this.onBeginGetSupplierDelegate = new BeginOperationDelegate(this.OnBeginGetSupplier);
            }
            if ((this.onEndGetSupplierDelegate == null)) {
                this.onEndGetSupplierDelegate = new EndOperationDelegate(this.OnEndGetSupplier);
            }
            if ((this.onGetSupplierCompletedDelegate == null)) {
                this.onGetSupplierCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSupplierCompleted);
            }
            base.InvokeAsync(this.onBeginGetSupplierDelegate, new object[] {
                        random,
                        CustomerID,
                        ID}, this.onEndGetSupplierDelegate, this.onGetSupplierCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SlvHanbaiClient.svcMstData.svcMstData.BeginGetCustomer(string random, string ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCustomer(random, ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SlvHanbaiClient.svcMstData.EntityMstData SlvHanbaiClient.svcMstData.svcMstData.EndGetCustomer(System.IAsyncResult result) {
            return base.Channel.EndGetCustomer(result);
        }
        
        private System.IAsyncResult OnBeginGetCustomer(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string random = ((string)(inValues[0]));
            string ID = ((string)(inValues[1]));
            return ((SlvHanbaiClient.svcMstData.svcMstData)(this)).BeginGetCustomer(random, ID, callback, asyncState);
        }
        
        private object[] OnEndGetCustomer(System.IAsyncResult result) {
            SlvHanbaiClient.svcMstData.EntityMstData retVal = ((SlvHanbaiClient.svcMstData.svcMstData)(this)).EndGetCustomer(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCustomerCompleted(object state) {
            if ((this.GetCustomerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCustomerCompleted(this, new GetCustomerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCustomerAsync(string random, string ID) {
            this.GetCustomerAsync(random, ID, null);
        }
        
        public void GetCustomerAsync(string random, string ID, object userState) {
            if ((this.onBeginGetCustomerDelegate == null)) {
                this.onBeginGetCustomerDelegate = new BeginOperationDelegate(this.OnBeginGetCustomer);
            }
            if ((this.onEndGetCustomerDelegate == null)) {
                this.onEndGetCustomerDelegate = new EndOperationDelegate(this.OnEndGetCustomer);
            }
            if ((this.onGetCustomerCompletedDelegate == null)) {
                this.onGetCustomerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCustomerCompleted);
            }
            base.InvokeAsync(this.onBeginGetCustomerDelegate, new object[] {
                        random,
                        ID}, this.onEndGetCustomerDelegate, this.onGetCustomerCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SlvHanbaiClient.svcMstData.svcMstData.BeginGetPerson(string random, string ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPerson(random, ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SlvHanbaiClient.svcMstData.EntityMstData SlvHanbaiClient.svcMstData.svcMstData.EndGetPerson(System.IAsyncResult result) {
            return base.Channel.EndGetPerson(result);
        }
        
        private System.IAsyncResult OnBeginGetPerson(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string random = ((string)(inValues[0]));
            string ID = ((string)(inValues[1]));
            return ((SlvHanbaiClient.svcMstData.svcMstData)(this)).BeginGetPerson(random, ID, callback, asyncState);
        }
        
        private object[] OnEndGetPerson(System.IAsyncResult result) {
            SlvHanbaiClient.svcMstData.EntityMstData retVal = ((SlvHanbaiClient.svcMstData.svcMstData)(this)).EndGetPerson(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPersonCompleted(object state) {
            if ((this.GetPersonCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPersonCompleted(this, new GetPersonCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPersonAsync(string random, string ID) {
            this.GetPersonAsync(random, ID, null);
        }
        
        public void GetPersonAsync(string random, string ID, object userState) {
            if ((this.onBeginGetPersonDelegate == null)) {
                this.onBeginGetPersonDelegate = new BeginOperationDelegate(this.OnBeginGetPerson);
            }
            if ((this.onEndGetPersonDelegate == null)) {
                this.onEndGetPersonDelegate = new EndOperationDelegate(this.OnEndGetPerson);
            }
            if ((this.onGetPersonCompletedDelegate == null)) {
                this.onGetPersonCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPersonCompleted);
            }
            base.InvokeAsync(this.onBeginGetPersonDelegate, new object[] {
                        random,
                        ID}, this.onEndGetPersonDelegate, this.onGetPersonCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SlvHanbaiClient.svcMstData.svcMstData.BeginGetCommodity(string random, string ID, string dataGirdSelectedIndex, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCommodity(random, ID, dataGirdSelectedIndex, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SlvHanbaiClient.svcMstData.EntityMstData SlvHanbaiClient.svcMstData.svcMstData.EndGetCommodity(System.IAsyncResult result) {
            return base.Channel.EndGetCommodity(result);
        }
        
        private System.IAsyncResult OnBeginGetCommodity(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string random = ((string)(inValues[0]));
            string ID = ((string)(inValues[1]));
            string dataGirdSelectedIndex = ((string)(inValues[2]));
            return ((SlvHanbaiClient.svcMstData.svcMstData)(this)).BeginGetCommodity(random, ID, dataGirdSelectedIndex, callback, asyncState);
        }
        
        private object[] OnEndGetCommodity(System.IAsyncResult result) {
            SlvHanbaiClient.svcMstData.EntityMstData retVal = ((SlvHanbaiClient.svcMstData.svcMstData)(this)).EndGetCommodity(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCommodityCompleted(object state) {
            if ((this.GetCommodityCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCommodityCompleted(this, new GetCommodityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCommodityAsync(string random, string ID, string dataGirdSelectedIndex) {
            this.GetCommodityAsync(random, ID, dataGirdSelectedIndex, null);
        }
        
        public void GetCommodityAsync(string random, string ID, string dataGirdSelectedIndex, object userState) {
            if ((this.onBeginGetCommodityDelegate == null)) {
                this.onBeginGetCommodityDelegate = new BeginOperationDelegate(this.OnBeginGetCommodity);
            }
            if ((this.onEndGetCommodityDelegate == null)) {
                this.onEndGetCommodityDelegate = new EndOperationDelegate(this.OnEndGetCommodity);
            }
            if ((this.onGetCommodityCompletedDelegate == null)) {
                this.onGetCommodityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCommodityCompleted);
            }
            base.InvokeAsync(this.onBeginGetCommodityDelegate, new object[] {
                        random,
                        ID,
                        dataGirdSelectedIndex}, this.onEndGetCommodityDelegate, this.onGetCommodityCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SlvHanbaiClient.svcMstData.svcMstData.BeginGetCompanyGroup(string random, string ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCompanyGroup(random, ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SlvHanbaiClient.svcMstData.EntityMstData SlvHanbaiClient.svcMstData.svcMstData.EndGetCompanyGroup(System.IAsyncResult result) {
            return base.Channel.EndGetCompanyGroup(result);
        }
        
        private System.IAsyncResult OnBeginGetCompanyGroup(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string random = ((string)(inValues[0]));
            string ID = ((string)(inValues[1]));
            return ((SlvHanbaiClient.svcMstData.svcMstData)(this)).BeginGetCompanyGroup(random, ID, callback, asyncState);
        }
        
        private object[] OnEndGetCompanyGroup(System.IAsyncResult result) {
            SlvHanbaiClient.svcMstData.EntityMstData retVal = ((SlvHanbaiClient.svcMstData.svcMstData)(this)).EndGetCompanyGroup(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCompanyGroupCompleted(object state) {
            if ((this.GetCompanyGroupCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCompanyGroupCompleted(this, new GetCompanyGroupCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCompanyGroupAsync(string random, string ID) {
            this.GetCompanyGroupAsync(random, ID, null);
        }
        
        public void GetCompanyGroupAsync(string random, string ID, object userState) {
            if ((this.onBeginGetCompanyGroupDelegate == null)) {
                this.onBeginGetCompanyGroupDelegate = new BeginOperationDelegate(this.OnBeginGetCompanyGroup);
            }
            if ((this.onEndGetCompanyGroupDelegate == null)) {
                this.onEndGetCompanyGroupDelegate = new EndOperationDelegate(this.OnEndGetCompanyGroup);
            }
            if ((this.onGetCompanyGroupCompletedDelegate == null)) {
                this.onGetCompanyGroupCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCompanyGroupCompleted);
            }
            base.InvokeAsync(this.onBeginGetCompanyGroupDelegate, new object[] {
                        random,
                        ID}, this.onEndGetCompanyGroupDelegate, this.onGetCompanyGroupCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SlvHanbaiClient.svcMstData.svcMstData.BeginGetZip(string random, string zipFrom, string zipTo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetZip(random, zipFrom, zipTo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SlvHanbaiClient.svcMstData.EntityMstData SlvHanbaiClient.svcMstData.svcMstData.EndGetZip(System.IAsyncResult result) {
            return base.Channel.EndGetZip(result);
        }
        
        private System.IAsyncResult OnBeginGetZip(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string random = ((string)(inValues[0]));
            string zipFrom = ((string)(inValues[1]));
            string zipTo = ((string)(inValues[2]));
            return ((SlvHanbaiClient.svcMstData.svcMstData)(this)).BeginGetZip(random, zipFrom, zipTo, callback, asyncState);
        }
        
        private object[] OnEndGetZip(System.IAsyncResult result) {
            SlvHanbaiClient.svcMstData.EntityMstData retVal = ((SlvHanbaiClient.svcMstData.svcMstData)(this)).EndGetZip(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetZipCompleted(object state) {
            if ((this.GetZipCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetZipCompleted(this, new GetZipCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetZipAsync(string random, string zipFrom, string zipTo) {
            this.GetZipAsync(random, zipFrom, zipTo, null);
        }
        
        public void GetZipAsync(string random, string zipFrom, string zipTo, object userState) {
            if ((this.onBeginGetZipDelegate == null)) {
                this.onBeginGetZipDelegate = new BeginOperationDelegate(this.OnBeginGetZip);
            }
            if ((this.onEndGetZipDelegate == null)) {
                this.onEndGetZipDelegate = new EndOperationDelegate(this.OnEndGetZip);
            }
            if ((this.onGetZipCompletedDelegate == null)) {
                this.onGetZipCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetZipCompleted);
            }
            base.InvokeAsync(this.onBeginGetZipDelegate, new object[] {
                        random,
                        zipFrom,
                        zipTo}, this.onEndGetZipDelegate, this.onGetZipCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SlvHanbaiClient.svcMstData.svcMstData.BeginGetCondition(string random, int kbn, string ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCondition(random, kbn, ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SlvHanbaiClient.svcMstData.EntityMstData SlvHanbaiClient.svcMstData.svcMstData.EndGetCondition(System.IAsyncResult result) {
            return base.Channel.EndGetCondition(result);
        }
        
        private System.IAsyncResult OnBeginGetCondition(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string random = ((string)(inValues[0]));
            int kbn = ((int)(inValues[1]));
            string ID = ((string)(inValues[2]));
            return ((SlvHanbaiClient.svcMstData.svcMstData)(this)).BeginGetCondition(random, kbn, ID, callback, asyncState);
        }
        
        private object[] OnEndGetCondition(System.IAsyncResult result) {
            SlvHanbaiClient.svcMstData.EntityMstData retVal = ((SlvHanbaiClient.svcMstData.svcMstData)(this)).EndGetCondition(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetConditionCompleted(object state) {
            if ((this.GetConditionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetConditionCompleted(this, new GetConditionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetConditionAsync(string random, int kbn, string ID) {
            this.GetConditionAsync(random, kbn, ID, null);
        }
        
        public void GetConditionAsync(string random, int kbn, string ID, object userState) {
            if ((this.onBeginGetConditionDelegate == null)) {
                this.onBeginGetConditionDelegate = new BeginOperationDelegate(this.OnBeginGetCondition);
            }
            if ((this.onEndGetConditionDelegate == null)) {
                this.onEndGetConditionDelegate = new EndOperationDelegate(this.OnEndGetCondition);
            }
            if ((this.onGetConditionCompletedDelegate == null)) {
                this.onGetConditionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetConditionCompleted);
            }
            base.InvokeAsync(this.onBeginGetConditionDelegate, new object[] {
                        random,
                        kbn,
                        ID}, this.onEndGetConditionDelegate, this.onGetConditionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SlvHanbaiClient.svcMstData.svcMstData.BeginGetReceitpDivision(string random, string ID, string dataGirdSelectedIndex, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetReceitpDivision(random, ID, dataGirdSelectedIndex, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SlvHanbaiClient.svcMstData.EntityMstData SlvHanbaiClient.svcMstData.svcMstData.EndGetReceitpDivision(System.IAsyncResult result) {
            return base.Channel.EndGetReceitpDivision(result);
        }
        
        private System.IAsyncResult OnBeginGetReceitpDivision(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string random = ((string)(inValues[0]));
            string ID = ((string)(inValues[1]));
            string dataGirdSelectedIndex = ((string)(inValues[2]));
            return ((SlvHanbaiClient.svcMstData.svcMstData)(this)).BeginGetReceitpDivision(random, ID, dataGirdSelectedIndex, callback, asyncState);
        }
        
        private object[] OnEndGetReceitpDivision(System.IAsyncResult result) {
            SlvHanbaiClient.svcMstData.EntityMstData retVal = ((SlvHanbaiClient.svcMstData.svcMstData)(this)).EndGetReceitpDivision(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetReceitpDivisionCompleted(object state) {
            if ((this.GetReceitpDivisionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetReceitpDivisionCompleted(this, new GetReceitpDivisionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetReceitpDivisionAsync(string random, string ID, string dataGirdSelectedIndex) {
            this.GetReceitpDivisionAsync(random, ID, dataGirdSelectedIndex, null);
        }
        
        public void GetReceitpDivisionAsync(string random, string ID, string dataGirdSelectedIndex, object userState) {
            if ((this.onBeginGetReceitpDivisionDelegate == null)) {
                this.onBeginGetReceitpDivisionDelegate = new BeginOperationDelegate(this.OnBeginGetReceitpDivision);
            }
            if ((this.onEndGetReceitpDivisionDelegate == null)) {
                this.onEndGetReceitpDivisionDelegate = new EndOperationDelegate(this.OnEndGetReceitpDivision);
            }
            if ((this.onGetReceitpDivisionCompletedDelegate == null)) {
                this.onGetReceitpDivisionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetReceitpDivisionCompleted);
            }
            base.InvokeAsync(this.onBeginGetReceitpDivisionDelegate, new object[] {
                        random,
                        ID,
                        dataGirdSelectedIndex}, this.onEndGetReceitpDivisionDelegate, this.onGetReceitpDivisionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SlvHanbaiClient.svcMstData.svcMstData.BeginGetGroup(string random, int kbn, string ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetGroup(random, kbn, ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SlvHanbaiClient.svcMstData.EntityMstData SlvHanbaiClient.svcMstData.svcMstData.EndGetGroup(System.IAsyncResult result) {
            return base.Channel.EndGetGroup(result);
        }
        
        private System.IAsyncResult OnBeginGetGroup(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string random = ((string)(inValues[0]));
            int kbn = ((int)(inValues[1]));
            string ID = ((string)(inValues[2]));
            return ((SlvHanbaiClient.svcMstData.svcMstData)(this)).BeginGetGroup(random, kbn, ID, callback, asyncState);
        }
        
        private object[] OnEndGetGroup(System.IAsyncResult result) {
            SlvHanbaiClient.svcMstData.EntityMstData retVal = ((SlvHanbaiClient.svcMstData.svcMstData)(this)).EndGetGroup(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetGroupCompleted(object state) {
            if ((this.GetGroupCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetGroupCompleted(this, new GetGroupCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetGroupAsync(string random, int kbn, string ID) {
            this.GetGroupAsync(random, kbn, ID, null);
        }
        
        public void GetGroupAsync(string random, int kbn, string ID, object userState) {
            if ((this.onBeginGetGroupDelegate == null)) {
                this.onBeginGetGroupDelegate = new BeginOperationDelegate(this.OnBeginGetGroup);
            }
            if ((this.onEndGetGroupDelegate == null)) {
                this.onEndGetGroupDelegate = new EndOperationDelegate(this.OnEndGetGroup);
            }
            if ((this.onGetGroupCompletedDelegate == null)) {
                this.onGetGroupCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetGroupCompleted);
            }
            base.InvokeAsync(this.onBeginGetGroupDelegate, new object[] {
                        random,
                        kbn,
                        ID}, this.onEndGetGroupDelegate, this.onGetGroupCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SlvHanbaiClient.svcMstData.svcMstData.BeginGetPurchase(string random, string ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPurchase(random, ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SlvHanbaiClient.svcMstData.EntityMstData SlvHanbaiClient.svcMstData.svcMstData.EndGetPurchase(System.IAsyncResult result) {
            return base.Channel.EndGetPurchase(result);
        }
        
        private System.IAsyncResult OnBeginGetPurchase(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string random = ((string)(inValues[0]));
            string ID = ((string)(inValues[1]));
            return ((SlvHanbaiClient.svcMstData.svcMstData)(this)).BeginGetPurchase(random, ID, callback, asyncState);
        }
        
        private object[] OnEndGetPurchase(System.IAsyncResult result) {
            SlvHanbaiClient.svcMstData.EntityMstData retVal = ((SlvHanbaiClient.svcMstData.svcMstData)(this)).EndGetPurchase(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPurchaseCompleted(object state) {
            if ((this.GetPurchaseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPurchaseCompleted(this, new GetPurchaseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPurchaseAsync(string random, string ID) {
            this.GetPurchaseAsync(random, ID, null);
        }
        
        public void GetPurchaseAsync(string random, string ID, object userState) {
            if ((this.onBeginGetPurchaseDelegate == null)) {
                this.onBeginGetPurchaseDelegate = new BeginOperationDelegate(this.OnBeginGetPurchase);
            }
            if ((this.onEndGetPurchaseDelegate == null)) {
                this.onEndGetPurchaseDelegate = new EndOperationDelegate(this.OnEndGetPurchase);
            }
            if ((this.onGetPurchaseCompletedDelegate == null)) {
                this.onGetPurchaseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPurchaseCompleted);
            }
            base.InvokeAsync(this.onBeginGetPurchaseDelegate, new object[] {
                        random,
                        ID}, this.onEndGetPurchaseDelegate, this.onGetPurchaseCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SlvHanbaiClient.svcMstData.svcMstData.BeginGetSupplierList(string random, string CustomerID, string ID, string Name, string Kana, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSupplierList(random, CustomerID, ID, Name, Kana, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> SlvHanbaiClient.svcMstData.svcMstData.EndGetSupplierList(System.IAsyncResult result) {
            return base.Channel.EndGetSupplierList(result);
        }
        
        private System.IAsyncResult OnBeginGetSupplierList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string random = ((string)(inValues[0]));
            string CustomerID = ((string)(inValues[1]));
            string ID = ((string)(inValues[2]));
            string Name = ((string)(inValues[3]));
            string Kana = ((string)(inValues[4]));
            return ((SlvHanbaiClient.svcMstData.svcMstData)(this)).BeginGetSupplierList(random, CustomerID, ID, Name, Kana, callback, asyncState);
        }
        
        private object[] OnEndGetSupplierList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> retVal = ((SlvHanbaiClient.svcMstData.svcMstData)(this)).EndGetSupplierList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSupplierListCompleted(object state) {
            if ((this.GetSupplierListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSupplierListCompleted(this, new GetSupplierListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSupplierListAsync(string random, string CustomerID, string ID, string Name, string Kana) {
            this.GetSupplierListAsync(random, CustomerID, ID, Name, Kana, null);
        }
        
        public void GetSupplierListAsync(string random, string CustomerID, string ID, string Name, string Kana, object userState) {
            if ((this.onBeginGetSupplierListDelegate == null)) {
                this.onBeginGetSupplierListDelegate = new BeginOperationDelegate(this.OnBeginGetSupplierList);
            }
            if ((this.onEndGetSupplierListDelegate == null)) {
                this.onEndGetSupplierListDelegate = new EndOperationDelegate(this.OnEndGetSupplierList);
            }
            if ((this.onGetSupplierListCompletedDelegate == null)) {
                this.onGetSupplierListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSupplierListCompleted);
            }
            base.InvokeAsync(this.onBeginGetSupplierListDelegate, new object[] {
                        random,
                        CustomerID,
                        ID,
                        Name,
                        Kana}, this.onEndGetSupplierListDelegate, this.onGetSupplierListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SlvHanbaiClient.svcMstData.svcMstData.BeginGetCustomerList(string random, string ID, string Name, string Kana, string GroupID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCustomerList(random, ID, Name, Kana, GroupID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> SlvHanbaiClient.svcMstData.svcMstData.EndGetCustomerList(System.IAsyncResult result) {
            return base.Channel.EndGetCustomerList(result);
        }
        
        private System.IAsyncResult OnBeginGetCustomerList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string random = ((string)(inValues[0]));
            string ID = ((string)(inValues[1]));
            string Name = ((string)(inValues[2]));
            string Kana = ((string)(inValues[3]));
            string GroupID = ((string)(inValues[4]));
            return ((SlvHanbaiClient.svcMstData.svcMstData)(this)).BeginGetCustomerList(random, ID, Name, Kana, GroupID, callback, asyncState);
        }
        
        private object[] OnEndGetCustomerList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> retVal = ((SlvHanbaiClient.svcMstData.svcMstData)(this)).EndGetCustomerList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCustomerListCompleted(object state) {
            if ((this.GetCustomerListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCustomerListCompleted(this, new GetCustomerListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCustomerListAsync(string random, string ID, string Name, string Kana, string GroupID) {
            this.GetCustomerListAsync(random, ID, Name, Kana, GroupID, null);
        }
        
        public void GetCustomerListAsync(string random, string ID, string Name, string Kana, string GroupID, object userState) {
            if ((this.onBeginGetCustomerListDelegate == null)) {
                this.onBeginGetCustomerListDelegate = new BeginOperationDelegate(this.OnBeginGetCustomerList);
            }
            if ((this.onEndGetCustomerListDelegate == null)) {
                this.onEndGetCustomerListDelegate = new EndOperationDelegate(this.OnEndGetCustomerList);
            }
            if ((this.onGetCustomerListCompletedDelegate == null)) {
                this.onGetCustomerListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCustomerListCompleted);
            }
            base.InvokeAsync(this.onBeginGetCustomerListDelegate, new object[] {
                        random,
                        ID,
                        Name,
                        Kana,
                        GroupID}, this.onEndGetCustomerListDelegate, this.onGetCustomerListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SlvHanbaiClient.svcMstData.svcMstData.BeginGetPersonList(string random, string ID, string Name, string Kana, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPersonList(random, ID, Name, Kana, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> SlvHanbaiClient.svcMstData.svcMstData.EndGetPersonList(System.IAsyncResult result) {
            return base.Channel.EndGetPersonList(result);
        }
        
        private System.IAsyncResult OnBeginGetPersonList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string random = ((string)(inValues[0]));
            string ID = ((string)(inValues[1]));
            string Name = ((string)(inValues[2]));
            string Kana = ((string)(inValues[3]));
            return ((SlvHanbaiClient.svcMstData.svcMstData)(this)).BeginGetPersonList(random, ID, Name, Kana, callback, asyncState);
        }
        
        private object[] OnEndGetPersonList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> retVal = ((SlvHanbaiClient.svcMstData.svcMstData)(this)).EndGetPersonList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPersonListCompleted(object state) {
            if ((this.GetPersonListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPersonListCompleted(this, new GetPersonListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPersonListAsync(string random, string ID, string Name, string Kana) {
            this.GetPersonListAsync(random, ID, Name, Kana, null);
        }
        
        public void GetPersonListAsync(string random, string ID, string Name, string Kana, object userState) {
            if ((this.onBeginGetPersonListDelegate == null)) {
                this.onBeginGetPersonListDelegate = new BeginOperationDelegate(this.OnBeginGetPersonList);
            }
            if ((this.onEndGetPersonListDelegate == null)) {
                this.onEndGetPersonListDelegate = new EndOperationDelegate(this.OnEndGetPersonList);
            }
            if ((this.onGetPersonListCompletedDelegate == null)) {
                this.onGetPersonListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPersonListCompleted);
            }
            base.InvokeAsync(this.onBeginGetPersonListDelegate, new object[] {
                        random,
                        ID,
                        Name,
                        Kana}, this.onEndGetPersonListDelegate, this.onGetPersonListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SlvHanbaiClient.svcMstData.svcMstData.BeginGetCommodityList(string random, string ID, string Name, string Kana, string GroupID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCommodityList(random, ID, Name, Kana, GroupID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> SlvHanbaiClient.svcMstData.svcMstData.EndGetCommodityList(System.IAsyncResult result) {
            return base.Channel.EndGetCommodityList(result);
        }
        
        private System.IAsyncResult OnBeginGetCommodityList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string random = ((string)(inValues[0]));
            string ID = ((string)(inValues[1]));
            string Name = ((string)(inValues[2]));
            string Kana = ((string)(inValues[3]));
            string GroupID = ((string)(inValues[4]));
            return ((SlvHanbaiClient.svcMstData.svcMstData)(this)).BeginGetCommodityList(random, ID, Name, Kana, GroupID, callback, asyncState);
        }
        
        private object[] OnEndGetCommodityList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> retVal = ((SlvHanbaiClient.svcMstData.svcMstData)(this)).EndGetCommodityList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCommodityListCompleted(object state) {
            if ((this.GetCommodityListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCommodityListCompleted(this, new GetCommodityListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCommodityListAsync(string random, string ID, string Name, string Kana, string GroupID) {
            this.GetCommodityListAsync(random, ID, Name, Kana, GroupID, null);
        }
        
        public void GetCommodityListAsync(string random, string ID, string Name, string Kana, string GroupID, object userState) {
            if ((this.onBeginGetCommodityListDelegate == null)) {
                this.onBeginGetCommodityListDelegate = new BeginOperationDelegate(this.OnBeginGetCommodityList);
            }
            if ((this.onEndGetCommodityListDelegate == null)) {
                this.onEndGetCommodityListDelegate = new EndOperationDelegate(this.OnEndGetCommodityList);
            }
            if ((this.onGetCommodityListCompletedDelegate == null)) {
                this.onGetCommodityListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCommodityListCompleted);
            }
            base.InvokeAsync(this.onBeginGetCommodityListDelegate, new object[] {
                        random,
                        ID,
                        Name,
                        Kana,
                        GroupID}, this.onEndGetCommodityListDelegate, this.onGetCommodityListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SlvHanbaiClient.svcMstData.svcMstData.BeginGetCompanyGroupList(string random, string ID, string Name, string Kana, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCompanyGroupList(random, ID, Name, Kana, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> SlvHanbaiClient.svcMstData.svcMstData.EndGetCompanyGroupList(System.IAsyncResult result) {
            return base.Channel.EndGetCompanyGroupList(result);
        }
        
        private System.IAsyncResult OnBeginGetCompanyGroupList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string random = ((string)(inValues[0]));
            string ID = ((string)(inValues[1]));
            string Name = ((string)(inValues[2]));
            string Kana = ((string)(inValues[3]));
            return ((SlvHanbaiClient.svcMstData.svcMstData)(this)).BeginGetCompanyGroupList(random, ID, Name, Kana, callback, asyncState);
        }
        
        private object[] OnEndGetCompanyGroupList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> retVal = ((SlvHanbaiClient.svcMstData.svcMstData)(this)).EndGetCompanyGroupList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCompanyGroupListCompleted(object state) {
            if ((this.GetCompanyGroupListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCompanyGroupListCompleted(this, new GetCompanyGroupListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCompanyGroupListAsync(string random, string ID, string Name, string Kana) {
            this.GetCompanyGroupListAsync(random, ID, Name, Kana, null);
        }
        
        public void GetCompanyGroupListAsync(string random, string ID, string Name, string Kana, object userState) {
            if ((this.onBeginGetCompanyGroupListDelegate == null)) {
                this.onBeginGetCompanyGroupListDelegate = new BeginOperationDelegate(this.OnBeginGetCompanyGroupList);
            }
            if ((this.onEndGetCompanyGroupListDelegate == null)) {
                this.onEndGetCompanyGroupListDelegate = new EndOperationDelegate(this.OnEndGetCompanyGroupList);
            }
            if ((this.onGetCompanyGroupListCompletedDelegate == null)) {
                this.onGetCompanyGroupListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCompanyGroupListCompleted);
            }
            base.InvokeAsync(this.onBeginGetCompanyGroupListDelegate, new object[] {
                        random,
                        ID,
                        Name,
                        Kana}, this.onEndGetCompanyGroupListDelegate, this.onGetCompanyGroupListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SlvHanbaiClient.svcMstData.svcMstData.BeginGetZipList(string random, string zipFrom, string zipTo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetZipList(random, zipFrom, zipTo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> SlvHanbaiClient.svcMstData.svcMstData.EndGetZipList(System.IAsyncResult result) {
            return base.Channel.EndGetZipList(result);
        }
        
        private System.IAsyncResult OnBeginGetZipList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string random = ((string)(inValues[0]));
            string zipFrom = ((string)(inValues[1]));
            string zipTo = ((string)(inValues[2]));
            return ((SlvHanbaiClient.svcMstData.svcMstData)(this)).BeginGetZipList(random, zipFrom, zipTo, callback, asyncState);
        }
        
        private object[] OnEndGetZipList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> retVal = ((SlvHanbaiClient.svcMstData.svcMstData)(this)).EndGetZipList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetZipListCompleted(object state) {
            if ((this.GetZipListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetZipListCompleted(this, new GetZipListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetZipListAsync(string random, string zipFrom, string zipTo) {
            this.GetZipListAsync(random, zipFrom, zipTo, null);
        }
        
        public void GetZipListAsync(string random, string zipFrom, string zipTo, object userState) {
            if ((this.onBeginGetZipListDelegate == null)) {
                this.onBeginGetZipListDelegate = new BeginOperationDelegate(this.OnBeginGetZipList);
            }
            if ((this.onEndGetZipListDelegate == null)) {
                this.onEndGetZipListDelegate = new EndOperationDelegate(this.OnEndGetZipList);
            }
            if ((this.onGetZipListCompletedDelegate == null)) {
                this.onGetZipListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetZipListCompleted);
            }
            base.InvokeAsync(this.onBeginGetZipListDelegate, new object[] {
                        random,
                        zipFrom,
                        zipTo}, this.onEndGetZipListDelegate, this.onGetZipListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SlvHanbaiClient.svcMstData.svcMstData.BeginGetConditionList(string random, int kbn, string ID, string Name, string Kana, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetConditionList(random, kbn, ID, Name, Kana, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> SlvHanbaiClient.svcMstData.svcMstData.EndGetConditionList(System.IAsyncResult result) {
            return base.Channel.EndGetConditionList(result);
        }
        
        private System.IAsyncResult OnBeginGetConditionList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string random = ((string)(inValues[0]));
            int kbn = ((int)(inValues[1]));
            string ID = ((string)(inValues[2]));
            string Name = ((string)(inValues[3]));
            string Kana = ((string)(inValues[4]));
            return ((SlvHanbaiClient.svcMstData.svcMstData)(this)).BeginGetConditionList(random, kbn, ID, Name, Kana, callback, asyncState);
        }
        
        private object[] OnEndGetConditionList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> retVal = ((SlvHanbaiClient.svcMstData.svcMstData)(this)).EndGetConditionList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetConditionListCompleted(object state) {
            if ((this.GetConditionListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetConditionListCompleted(this, new GetConditionListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetConditionListAsync(string random, int kbn, string ID, string Name, string Kana) {
            this.GetConditionListAsync(random, kbn, ID, Name, Kana, null);
        }
        
        public void GetConditionListAsync(string random, int kbn, string ID, string Name, string Kana, object userState) {
            if ((this.onBeginGetConditionListDelegate == null)) {
                this.onBeginGetConditionListDelegate = new BeginOperationDelegate(this.OnBeginGetConditionList);
            }
            if ((this.onEndGetConditionListDelegate == null)) {
                this.onEndGetConditionListDelegate = new EndOperationDelegate(this.OnEndGetConditionList);
            }
            if ((this.onGetConditionListCompletedDelegate == null)) {
                this.onGetConditionListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetConditionListCompleted);
            }
            base.InvokeAsync(this.onBeginGetConditionListDelegate, new object[] {
                        random,
                        kbn,
                        ID,
                        Name,
                        Kana}, this.onEndGetConditionListDelegate, this.onGetConditionListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SlvHanbaiClient.svcMstData.svcMstData.BeginGetReceitpDivisionList(string random, string ID, string Name, string Kana, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetReceitpDivisionList(random, ID, Name, Kana, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> SlvHanbaiClient.svcMstData.svcMstData.EndGetReceitpDivisionList(System.IAsyncResult result) {
            return base.Channel.EndGetReceitpDivisionList(result);
        }
        
        private System.IAsyncResult OnBeginGetReceitpDivisionList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string random = ((string)(inValues[0]));
            string ID = ((string)(inValues[1]));
            string Name = ((string)(inValues[2]));
            string Kana = ((string)(inValues[3]));
            return ((SlvHanbaiClient.svcMstData.svcMstData)(this)).BeginGetReceitpDivisionList(random, ID, Name, Kana, callback, asyncState);
        }
        
        private object[] OnEndGetReceitpDivisionList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> retVal = ((SlvHanbaiClient.svcMstData.svcMstData)(this)).EndGetReceitpDivisionList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetReceitpDivisionListCompleted(object state) {
            if ((this.GetReceitpDivisionListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetReceitpDivisionListCompleted(this, new GetReceitpDivisionListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetReceitpDivisionListAsync(string random, string ID, string Name, string Kana) {
            this.GetReceitpDivisionListAsync(random, ID, Name, Kana, null);
        }
        
        public void GetReceitpDivisionListAsync(string random, string ID, string Name, string Kana, object userState) {
            if ((this.onBeginGetReceitpDivisionListDelegate == null)) {
                this.onBeginGetReceitpDivisionListDelegate = new BeginOperationDelegate(this.OnBeginGetReceitpDivisionList);
            }
            if ((this.onEndGetReceitpDivisionListDelegate == null)) {
                this.onEndGetReceitpDivisionListDelegate = new EndOperationDelegate(this.OnEndGetReceitpDivisionList);
            }
            if ((this.onGetReceitpDivisionListCompletedDelegate == null)) {
                this.onGetReceitpDivisionListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetReceitpDivisionListCompleted);
            }
            base.InvokeAsync(this.onBeginGetReceitpDivisionListDelegate, new object[] {
                        random,
                        ID,
                        Name,
                        Kana}, this.onEndGetReceitpDivisionListDelegate, this.onGetReceitpDivisionListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SlvHanbaiClient.svcMstData.svcMstData.BeginGetGroupList(string random, int kbn, string ID, string Name, string Kana, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetGroupList(random, kbn, ID, Name, Kana, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> SlvHanbaiClient.svcMstData.svcMstData.EndGetGroupList(System.IAsyncResult result) {
            return base.Channel.EndGetGroupList(result);
        }
        
        private System.IAsyncResult OnBeginGetGroupList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string random = ((string)(inValues[0]));
            int kbn = ((int)(inValues[1]));
            string ID = ((string)(inValues[2]));
            string Name = ((string)(inValues[3]));
            string Kana = ((string)(inValues[4]));
            return ((SlvHanbaiClient.svcMstData.svcMstData)(this)).BeginGetGroupList(random, kbn, ID, Name, Kana, callback, asyncState);
        }
        
        private object[] OnEndGetGroupList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> retVal = ((SlvHanbaiClient.svcMstData.svcMstData)(this)).EndGetGroupList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetGroupListCompleted(object state) {
            if ((this.GetGroupListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetGroupListCompleted(this, new GetGroupListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetGroupListAsync(string random, int kbn, string ID, string Name, string Kana) {
            this.GetGroupListAsync(random, kbn, ID, Name, Kana, null);
        }
        
        public void GetGroupListAsync(string random, int kbn, string ID, string Name, string Kana, object userState) {
            if ((this.onBeginGetGroupListDelegate == null)) {
                this.onBeginGetGroupListDelegate = new BeginOperationDelegate(this.OnBeginGetGroupList);
            }
            if ((this.onEndGetGroupListDelegate == null)) {
                this.onEndGetGroupListDelegate = new EndOperationDelegate(this.OnEndGetGroupList);
            }
            if ((this.onGetGroupListCompletedDelegate == null)) {
                this.onGetGroupListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetGroupListCompleted);
            }
            base.InvokeAsync(this.onBeginGetGroupListDelegate, new object[] {
                        random,
                        kbn,
                        ID,
                        Name,
                        Kana}, this.onEndGetGroupListDelegate, this.onGetGroupListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SlvHanbaiClient.svcMstData.svcMstData.BeginGetPurchaseList(string random, string ID, string Name, string Kana, string GroupID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPurchaseList(random, ID, Name, Kana, GroupID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> SlvHanbaiClient.svcMstData.svcMstData.EndGetPurchaseList(System.IAsyncResult result) {
            return base.Channel.EndGetPurchaseList(result);
        }
        
        private System.IAsyncResult OnBeginGetPurchaseList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string random = ((string)(inValues[0]));
            string ID = ((string)(inValues[1]));
            string Name = ((string)(inValues[2]));
            string Kana = ((string)(inValues[3]));
            string GroupID = ((string)(inValues[4]));
            return ((SlvHanbaiClient.svcMstData.svcMstData)(this)).BeginGetPurchaseList(random, ID, Name, Kana, GroupID, callback, asyncState);
        }
        
        private object[] OnEndGetPurchaseList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> retVal = ((SlvHanbaiClient.svcMstData.svcMstData)(this)).EndGetPurchaseList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPurchaseListCompleted(object state) {
            if ((this.GetPurchaseListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPurchaseListCompleted(this, new GetPurchaseListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPurchaseListAsync(string random, string ID, string Name, string Kana, string GroupID) {
            this.GetPurchaseListAsync(random, ID, Name, Kana, GroupID, null);
        }
        
        public void GetPurchaseListAsync(string random, string ID, string Name, string Kana, string GroupID, object userState) {
            if ((this.onBeginGetPurchaseListDelegate == null)) {
                this.onBeginGetPurchaseListDelegate = new BeginOperationDelegate(this.OnBeginGetPurchaseList);
            }
            if ((this.onEndGetPurchaseListDelegate == null)) {
                this.onEndGetPurchaseListDelegate = new EndOperationDelegate(this.OnEndGetPurchaseList);
            }
            if ((this.onGetPurchaseListCompletedDelegate == null)) {
                this.onGetPurchaseListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPurchaseListCompleted);
            }
            base.InvokeAsync(this.onBeginGetPurchaseListDelegate, new object[] {
                        random,
                        ID,
                        Name,
                        Kana,
                        GroupID}, this.onEndGetPurchaseListDelegate, this.onGetPurchaseListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SlvHanbaiClient.svcMstData.svcMstData.BeginGetUserList(string random, string ID, string Name, string Kana, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUserList(random, ID, Name, Kana, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> SlvHanbaiClient.svcMstData.svcMstData.EndGetUserList(System.IAsyncResult result) {
            return base.Channel.EndGetUserList(result);
        }
        
        private System.IAsyncResult OnBeginGetUserList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string random = ((string)(inValues[0]));
            string ID = ((string)(inValues[1]));
            string Name = ((string)(inValues[2]));
            string Kana = ((string)(inValues[3]));
            return ((SlvHanbaiClient.svcMstData.svcMstData)(this)).BeginGetUserList(random, ID, Name, Kana, callback, asyncState);
        }
        
        private object[] OnEndGetUserList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> retVal = ((SlvHanbaiClient.svcMstData.svcMstData)(this)).EndGetUserList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUserListCompleted(object state) {
            if ((this.GetUserListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserListCompleted(this, new GetUserListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserListAsync(string random, string ID, string Name, string Kana) {
            this.GetUserListAsync(random, ID, Name, Kana, null);
        }
        
        public void GetUserListAsync(string random, string ID, string Name, string Kana, object userState) {
            if ((this.onBeginGetUserListDelegate == null)) {
                this.onBeginGetUserListDelegate = new BeginOperationDelegate(this.OnBeginGetUserList);
            }
            if ((this.onEndGetUserListDelegate == null)) {
                this.onEndGetUserListDelegate = new EndOperationDelegate(this.OnEndGetUserList);
            }
            if ((this.onGetUserListCompletedDelegate == null)) {
                this.onGetUserListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserListCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserListDelegate, new object[] {
                        random,
                        ID,
                        Name,
                        Kana}, this.onEndGetUserListDelegate, this.onGetUserListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SlvHanbaiClient.svcMstData.svcMstData.BeginGetInventoryList(string random, string ID, string Name, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetInventoryList(random, ID, Name, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> SlvHanbaiClient.svcMstData.svcMstData.EndGetInventoryList(System.IAsyncResult result) {
            return base.Channel.EndGetInventoryList(result);
        }
        
        private System.IAsyncResult OnBeginGetInventoryList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string random = ((string)(inValues[0]));
            string ID = ((string)(inValues[1]));
            string Name = ((string)(inValues[2]));
            return ((SlvHanbaiClient.svcMstData.svcMstData)(this)).BeginGetInventoryList(random, ID, Name, callback, asyncState);
        }
        
        private object[] OnEndGetInventoryList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> retVal = ((SlvHanbaiClient.svcMstData.svcMstData)(this)).EndGetInventoryList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetInventoryListCompleted(object state) {
            if ((this.GetInventoryListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetInventoryListCompleted(this, new GetInventoryListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetInventoryListAsync(string random, string ID, string Name) {
            this.GetInventoryListAsync(random, ID, Name, null);
        }
        
        public void GetInventoryListAsync(string random, string ID, string Name, object userState) {
            if ((this.onBeginGetInventoryListDelegate == null)) {
                this.onBeginGetInventoryListDelegate = new BeginOperationDelegate(this.OnBeginGetInventoryList);
            }
            if ((this.onEndGetInventoryListDelegate == null)) {
                this.onEndGetInventoryListDelegate = new EndOperationDelegate(this.OnEndGetInventoryList);
            }
            if ((this.onGetInventoryListCompletedDelegate == null)) {
                this.onGetInventoryListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetInventoryListCompleted);
            }
            base.InvokeAsync(this.onBeginGetInventoryListDelegate, new object[] {
                        random,
                        ID,
                        Name}, this.onEndGetInventoryListDelegate, this.onGetInventoryListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SlvHanbaiClient.svcMstData.svcMstData.BeginGetSalesBalanceList(string random, string ID, string Name, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSalesBalanceList(random, ID, Name, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> SlvHanbaiClient.svcMstData.svcMstData.EndGetSalesBalanceList(System.IAsyncResult result) {
            return base.Channel.EndGetSalesBalanceList(result);
        }
        
        private System.IAsyncResult OnBeginGetSalesBalanceList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string random = ((string)(inValues[0]));
            string ID = ((string)(inValues[1]));
            string Name = ((string)(inValues[2]));
            return ((SlvHanbaiClient.svcMstData.svcMstData)(this)).BeginGetSalesBalanceList(random, ID, Name, callback, asyncState);
        }
        
        private object[] OnEndGetSalesBalanceList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> retVal = ((SlvHanbaiClient.svcMstData.svcMstData)(this)).EndGetSalesBalanceList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSalesBalanceListCompleted(object state) {
            if ((this.GetSalesBalanceListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSalesBalanceListCompleted(this, new GetSalesBalanceListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSalesBalanceListAsync(string random, string ID, string Name) {
            this.GetSalesBalanceListAsync(random, ID, Name, null);
        }
        
        public void GetSalesBalanceListAsync(string random, string ID, string Name, object userState) {
            if ((this.onBeginGetSalesBalanceListDelegate == null)) {
                this.onBeginGetSalesBalanceListDelegate = new BeginOperationDelegate(this.OnBeginGetSalesBalanceList);
            }
            if ((this.onEndGetSalesBalanceListDelegate == null)) {
                this.onEndGetSalesBalanceListDelegate = new EndOperationDelegate(this.OnEndGetSalesBalanceList);
            }
            if ((this.onGetSalesBalanceListCompletedDelegate == null)) {
                this.onGetSalesBalanceListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSalesBalanceListCompleted);
            }
            base.InvokeAsync(this.onBeginGetSalesBalanceListDelegate, new object[] {
                        random,
                        ID,
                        Name}, this.onEndGetSalesBalanceListDelegate, this.onGetSalesBalanceListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SlvHanbaiClient.svcMstData.svcMstData.BeginGetPaymentBalanceList(string random, string ID, string Name, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPaymentBalanceList(random, ID, Name, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> SlvHanbaiClient.svcMstData.svcMstData.EndGetPaymentBalanceList(System.IAsyncResult result) {
            return base.Channel.EndGetPaymentBalanceList(result);
        }
        
        private System.IAsyncResult OnBeginGetPaymentBalanceList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string random = ((string)(inValues[0]));
            string ID = ((string)(inValues[1]));
            string Name = ((string)(inValues[2]));
            return ((SlvHanbaiClient.svcMstData.svcMstData)(this)).BeginGetPaymentBalanceList(random, ID, Name, callback, asyncState);
        }
        
        private object[] OnEndGetPaymentBalanceList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> retVal = ((SlvHanbaiClient.svcMstData.svcMstData)(this)).EndGetPaymentBalanceList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPaymentBalanceListCompleted(object state) {
            if ((this.GetPaymentBalanceListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPaymentBalanceListCompleted(this, new GetPaymentBalanceListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPaymentBalanceListAsync(string random, string ID, string Name) {
            this.GetPaymentBalanceListAsync(random, ID, Name, null);
        }
        
        public void GetPaymentBalanceListAsync(string random, string ID, string Name, object userState) {
            if ((this.onBeginGetPaymentBalanceListDelegate == null)) {
                this.onBeginGetPaymentBalanceListDelegate = new BeginOperationDelegate(this.OnBeginGetPaymentBalanceList);
            }
            if ((this.onEndGetPaymentBalanceListDelegate == null)) {
                this.onEndGetPaymentBalanceListDelegate = new EndOperationDelegate(this.OnEndGetPaymentBalanceList);
            }
            if ((this.onGetPaymentBalanceListCompletedDelegate == null)) {
                this.onGetPaymentBalanceListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPaymentBalanceListCompleted);
            }
            base.InvokeAsync(this.onBeginGetPaymentBalanceListDelegate, new object[] {
                        random,
                        ID,
                        Name}, this.onEndGetPaymentBalanceListDelegate, this.onGetPaymentBalanceListCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override SlvHanbaiClient.svcMstData.svcMstData CreateChannel() {
            return new svcMstDataClientChannel(this);
        }
        
        private class svcMstDataClientChannel : ChannelBase<SlvHanbaiClient.svcMstData.svcMstData>, SlvHanbaiClient.svcMstData.svcMstData {
            
            public svcMstDataClientChannel(System.ServiceModel.ClientBase<SlvHanbaiClient.svcMstData.svcMstData> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetSupplier(string random, string CustomerID, string ID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = random;
                _args[1] = CustomerID;
                _args[2] = ID;
                System.IAsyncResult _result = base.BeginInvoke("GetSupplier", _args, callback, asyncState);
                return _result;
            }
            
            public SlvHanbaiClient.svcMstData.EntityMstData EndGetSupplier(System.IAsyncResult result) {
                object[] _args = new object[0];
                SlvHanbaiClient.svcMstData.EntityMstData _result = ((SlvHanbaiClient.svcMstData.EntityMstData)(base.EndInvoke("GetSupplier", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCustomer(string random, string ID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = random;
                _args[1] = ID;
                System.IAsyncResult _result = base.BeginInvoke("GetCustomer", _args, callback, asyncState);
                return _result;
            }
            
            public SlvHanbaiClient.svcMstData.EntityMstData EndGetCustomer(System.IAsyncResult result) {
                object[] _args = new object[0];
                SlvHanbaiClient.svcMstData.EntityMstData _result = ((SlvHanbaiClient.svcMstData.EntityMstData)(base.EndInvoke("GetCustomer", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPerson(string random, string ID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = random;
                _args[1] = ID;
                System.IAsyncResult _result = base.BeginInvoke("GetPerson", _args, callback, asyncState);
                return _result;
            }
            
            public SlvHanbaiClient.svcMstData.EntityMstData EndGetPerson(System.IAsyncResult result) {
                object[] _args = new object[0];
                SlvHanbaiClient.svcMstData.EntityMstData _result = ((SlvHanbaiClient.svcMstData.EntityMstData)(base.EndInvoke("GetPerson", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCommodity(string random, string ID, string dataGirdSelectedIndex, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = random;
                _args[1] = ID;
                _args[2] = dataGirdSelectedIndex;
                System.IAsyncResult _result = base.BeginInvoke("GetCommodity", _args, callback, asyncState);
                return _result;
            }
            
            public SlvHanbaiClient.svcMstData.EntityMstData EndGetCommodity(System.IAsyncResult result) {
                object[] _args = new object[0];
                SlvHanbaiClient.svcMstData.EntityMstData _result = ((SlvHanbaiClient.svcMstData.EntityMstData)(base.EndInvoke("GetCommodity", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCompanyGroup(string random, string ID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = random;
                _args[1] = ID;
                System.IAsyncResult _result = base.BeginInvoke("GetCompanyGroup", _args, callback, asyncState);
                return _result;
            }
            
            public SlvHanbaiClient.svcMstData.EntityMstData EndGetCompanyGroup(System.IAsyncResult result) {
                object[] _args = new object[0];
                SlvHanbaiClient.svcMstData.EntityMstData _result = ((SlvHanbaiClient.svcMstData.EntityMstData)(base.EndInvoke("GetCompanyGroup", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetZip(string random, string zipFrom, string zipTo, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = random;
                _args[1] = zipFrom;
                _args[2] = zipTo;
                System.IAsyncResult _result = base.BeginInvoke("GetZip", _args, callback, asyncState);
                return _result;
            }
            
            public SlvHanbaiClient.svcMstData.EntityMstData EndGetZip(System.IAsyncResult result) {
                object[] _args = new object[0];
                SlvHanbaiClient.svcMstData.EntityMstData _result = ((SlvHanbaiClient.svcMstData.EntityMstData)(base.EndInvoke("GetZip", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCondition(string random, int kbn, string ID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = random;
                _args[1] = kbn;
                _args[2] = ID;
                System.IAsyncResult _result = base.BeginInvoke("GetCondition", _args, callback, asyncState);
                return _result;
            }
            
            public SlvHanbaiClient.svcMstData.EntityMstData EndGetCondition(System.IAsyncResult result) {
                object[] _args = new object[0];
                SlvHanbaiClient.svcMstData.EntityMstData _result = ((SlvHanbaiClient.svcMstData.EntityMstData)(base.EndInvoke("GetCondition", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetReceitpDivision(string random, string ID, string dataGirdSelectedIndex, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = random;
                _args[1] = ID;
                _args[2] = dataGirdSelectedIndex;
                System.IAsyncResult _result = base.BeginInvoke("GetReceitpDivision", _args, callback, asyncState);
                return _result;
            }
            
            public SlvHanbaiClient.svcMstData.EntityMstData EndGetReceitpDivision(System.IAsyncResult result) {
                object[] _args = new object[0];
                SlvHanbaiClient.svcMstData.EntityMstData _result = ((SlvHanbaiClient.svcMstData.EntityMstData)(base.EndInvoke("GetReceitpDivision", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetGroup(string random, int kbn, string ID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = random;
                _args[1] = kbn;
                _args[2] = ID;
                System.IAsyncResult _result = base.BeginInvoke("GetGroup", _args, callback, asyncState);
                return _result;
            }
            
            public SlvHanbaiClient.svcMstData.EntityMstData EndGetGroup(System.IAsyncResult result) {
                object[] _args = new object[0];
                SlvHanbaiClient.svcMstData.EntityMstData _result = ((SlvHanbaiClient.svcMstData.EntityMstData)(base.EndInvoke("GetGroup", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPurchase(string random, string ID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = random;
                _args[1] = ID;
                System.IAsyncResult _result = base.BeginInvoke("GetPurchase", _args, callback, asyncState);
                return _result;
            }
            
            public SlvHanbaiClient.svcMstData.EntityMstData EndGetPurchase(System.IAsyncResult result) {
                object[] _args = new object[0];
                SlvHanbaiClient.svcMstData.EntityMstData _result = ((SlvHanbaiClient.svcMstData.EntityMstData)(base.EndInvoke("GetPurchase", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetSupplierList(string random, string CustomerID, string ID, string Name, string Kana, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = random;
                _args[1] = CustomerID;
                _args[2] = ID;
                _args[3] = Name;
                _args[4] = Kana;
                System.IAsyncResult _result = base.BeginInvoke("GetSupplierList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> EndGetSupplierList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> _result = ((System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList>)(base.EndInvoke("GetSupplierList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCustomerList(string random, string ID, string Name, string Kana, string GroupID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = random;
                _args[1] = ID;
                _args[2] = Name;
                _args[3] = Kana;
                _args[4] = GroupID;
                System.IAsyncResult _result = base.BeginInvoke("GetCustomerList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> EndGetCustomerList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> _result = ((System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList>)(base.EndInvoke("GetCustomerList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPersonList(string random, string ID, string Name, string Kana, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = random;
                _args[1] = ID;
                _args[2] = Name;
                _args[3] = Kana;
                System.IAsyncResult _result = base.BeginInvoke("GetPersonList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> EndGetPersonList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> _result = ((System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList>)(base.EndInvoke("GetPersonList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCommodityList(string random, string ID, string Name, string Kana, string GroupID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = random;
                _args[1] = ID;
                _args[2] = Name;
                _args[3] = Kana;
                _args[4] = GroupID;
                System.IAsyncResult _result = base.BeginInvoke("GetCommodityList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> EndGetCommodityList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> _result = ((System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList>)(base.EndInvoke("GetCommodityList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCompanyGroupList(string random, string ID, string Name, string Kana, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = random;
                _args[1] = ID;
                _args[2] = Name;
                _args[3] = Kana;
                System.IAsyncResult _result = base.BeginInvoke("GetCompanyGroupList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> EndGetCompanyGroupList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> _result = ((System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList>)(base.EndInvoke("GetCompanyGroupList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetZipList(string random, string zipFrom, string zipTo, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = random;
                _args[1] = zipFrom;
                _args[2] = zipTo;
                System.IAsyncResult _result = base.BeginInvoke("GetZipList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> EndGetZipList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> _result = ((System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList>)(base.EndInvoke("GetZipList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetConditionList(string random, int kbn, string ID, string Name, string Kana, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = random;
                _args[1] = kbn;
                _args[2] = ID;
                _args[3] = Name;
                _args[4] = Kana;
                System.IAsyncResult _result = base.BeginInvoke("GetConditionList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> EndGetConditionList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> _result = ((System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList>)(base.EndInvoke("GetConditionList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetReceitpDivisionList(string random, string ID, string Name, string Kana, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = random;
                _args[1] = ID;
                _args[2] = Name;
                _args[3] = Kana;
                System.IAsyncResult _result = base.BeginInvoke("GetReceitpDivisionList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> EndGetReceitpDivisionList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> _result = ((System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList>)(base.EndInvoke("GetReceitpDivisionList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetGroupList(string random, int kbn, string ID, string Name, string Kana, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = random;
                _args[1] = kbn;
                _args[2] = ID;
                _args[3] = Name;
                _args[4] = Kana;
                System.IAsyncResult _result = base.BeginInvoke("GetGroupList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> EndGetGroupList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> _result = ((System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList>)(base.EndInvoke("GetGroupList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPurchaseList(string random, string ID, string Name, string Kana, string GroupID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = random;
                _args[1] = ID;
                _args[2] = Name;
                _args[3] = Kana;
                _args[4] = GroupID;
                System.IAsyncResult _result = base.BeginInvoke("GetPurchaseList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> EndGetPurchaseList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> _result = ((System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList>)(base.EndInvoke("GetPurchaseList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetUserList(string random, string ID, string Name, string Kana, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = random;
                _args[1] = ID;
                _args[2] = Name;
                _args[3] = Kana;
                System.IAsyncResult _result = base.BeginInvoke("GetUserList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> EndGetUserList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> _result = ((System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList>)(base.EndInvoke("GetUserList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetInventoryList(string random, string ID, string Name, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = random;
                _args[1] = ID;
                _args[2] = Name;
                System.IAsyncResult _result = base.BeginInvoke("GetInventoryList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> EndGetInventoryList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> _result = ((System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList>)(base.EndInvoke("GetInventoryList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetSalesBalanceList(string random, string ID, string Name, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = random;
                _args[1] = ID;
                _args[2] = Name;
                System.IAsyncResult _result = base.BeginInvoke("GetSalesBalanceList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> EndGetSalesBalanceList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> _result = ((System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList>)(base.EndInvoke("GetSalesBalanceList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPaymentBalanceList(string random, string ID, string Name, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = random;
                _args[1] = ID;
                _args[2] = Name;
                System.IAsyncResult _result = base.BeginInvoke("GetPaymentBalanceList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> EndGetPaymentBalanceList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList> _result = ((System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcMstData.EntityMstList>)(base.EndInvoke("GetPaymentBalanceList", _args, result)));
                return _result;
            }
        }
    }
}
