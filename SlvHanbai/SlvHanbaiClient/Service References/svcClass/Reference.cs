//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.237
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace SlvHanbaiClient.svcClass {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityClass", Namespace="http://schemas.datacontract.org/2004/07/SlvHanbai.Web.Class.Entity")]
    public partial class EntityClass : SlvHanbaiClient.svcClass.EntityBase {
        
        private int _class_divition_idField;
        
        private int _display_division_idField;
        
        private string _display_division_nmField;
        
        private string _idField;
        
        private int _lock_flgField;
        
        private string _memoField;
        
        private string _nameField;
        
        private int _rec_noField;
        
        private string messageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int _class_divition_id {
            get {
                return this._class_divition_idField;
            }
            set {
                if ((this._class_divition_idField.Equals(value) != true)) {
                    this._class_divition_idField = value;
                    this.RaisePropertyChanged("_class_divition_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int _display_division_id {
            get {
                return this._display_division_idField;
            }
            set {
                if ((this._display_division_idField.Equals(value) != true)) {
                    this._display_division_idField = value;
                    this.RaisePropertyChanged("_display_division_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string _display_division_nm {
            get {
                return this._display_division_nmField;
            }
            set {
                if ((object.ReferenceEquals(this._display_division_nmField, value) != true)) {
                    this._display_division_nmField = value;
                    this.RaisePropertyChanged("_display_division_nm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string _id {
            get {
                return this._idField;
            }
            set {
                if ((object.ReferenceEquals(this._idField, value) != true)) {
                    this._idField = value;
                    this.RaisePropertyChanged("_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int _lock_flg {
            get {
                return this._lock_flgField;
            }
            set {
                if ((this._lock_flgField.Equals(value) != true)) {
                    this._lock_flgField = value;
                    this.RaisePropertyChanged("_lock_flg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string _memo {
            get {
                return this._memoField;
            }
            set {
                if ((object.ReferenceEquals(this._memoField, value) != true)) {
                    this._memoField = value;
                    this.RaisePropertyChanged("_memo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string _name {
            get {
                return this._nameField;
            }
            set {
                if ((object.ReferenceEquals(this._nameField, value) != true)) {
                    this._nameField = value;
                    this.RaisePropertyChanged("_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int _rec_no {
            get {
                return this._rec_noField;
            }
            set {
                if ((this._rec_noField.Equals(value) != true)) {
                    this._rec_noField = value;
                    this.RaisePropertyChanged("_rec_no");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string message {
            get {
                return this.messageField;
            }
            set {
                if ((object.ReferenceEquals(this.messageField, value) != true)) {
                    this.messageField = value;
                    this.RaisePropertyChanged("message");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityBase", Namespace="http://schemas.datacontract.org/2004/07/SlvHanbai.Web.Class.Entity")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SlvHanbaiClient.svcClass.EntityClass))]
    public partial class EntityBase : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="svcClass.svcClass")]
    public interface svcClass {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:svcClass/GetClass", ReplyAction="urn:svcClass/GetClassResponse")]
        System.IAsyncResult BeginGetClass(string random, int classKbn, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcClass.EntityClass> EndGetClass(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:svcClass/ChkClassExist", ReplyAction="urn:svcClass/ChkClassExistResponse")]
        System.IAsyncResult BeginChkClassExist(string random, int classKbn, string Id, System.AsyncCallback callback, object asyncState);
        
        string EndChkClassExist(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:svcClass/UpdateClass", ReplyAction="urn:svcClass/UpdateClassResponse")]
        System.IAsyncResult BeginUpdateClass(string random, System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcClass.EntityClass> entity, int classKbn, System.AsyncCallback callback, object asyncState);
        
        string EndUpdateClass(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface svcClassChannel : SlvHanbaiClient.svcClass.svcClass, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetClassCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetClassCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcClass.EntityClass> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcClass.EntityClass>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChkClassExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ChkClassExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateClassCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateClassCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class svcClassClient : System.ServiceModel.ClientBase<SlvHanbaiClient.svcClass.svcClass>, SlvHanbaiClient.svcClass.svcClass {
        
        private BeginOperationDelegate onBeginGetClassDelegate;
        
        private EndOperationDelegate onEndGetClassDelegate;
        
        private System.Threading.SendOrPostCallback onGetClassCompletedDelegate;
        
        private BeginOperationDelegate onBeginChkClassExistDelegate;
        
        private EndOperationDelegate onEndChkClassExistDelegate;
        
        private System.Threading.SendOrPostCallback onChkClassExistCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateClassDelegate;
        
        private EndOperationDelegate onEndUpdateClassDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateClassCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public svcClassClient() {
        }
        
        public svcClassClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public svcClassClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public svcClassClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public svcClassClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("CookieContainer を設定できません。バインドに HttpCookieContainerBindingElement が含まれていることを確認してくだ" +
                            "さい。");
                }
            }
        }
        
        public event System.EventHandler<GetClassCompletedEventArgs> GetClassCompleted;
        
        public event System.EventHandler<ChkClassExistCompletedEventArgs> ChkClassExistCompleted;
        
        public event System.EventHandler<UpdateClassCompletedEventArgs> UpdateClassCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SlvHanbaiClient.svcClass.svcClass.BeginGetClass(string random, int classKbn, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetClass(random, classKbn, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcClass.EntityClass> SlvHanbaiClient.svcClass.svcClass.EndGetClass(System.IAsyncResult result) {
            return base.Channel.EndGetClass(result);
        }
        
        private System.IAsyncResult OnBeginGetClass(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string random = ((string)(inValues[0]));
            int classKbn = ((int)(inValues[1]));
            return ((SlvHanbaiClient.svcClass.svcClass)(this)).BeginGetClass(random, classKbn, callback, asyncState);
        }
        
        private object[] OnEndGetClass(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcClass.EntityClass> retVal = ((SlvHanbaiClient.svcClass.svcClass)(this)).EndGetClass(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetClassCompleted(object state) {
            if ((this.GetClassCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetClassCompleted(this, new GetClassCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetClassAsync(string random, int classKbn) {
            this.GetClassAsync(random, classKbn, null);
        }
        
        public void GetClassAsync(string random, int classKbn, object userState) {
            if ((this.onBeginGetClassDelegate == null)) {
                this.onBeginGetClassDelegate = new BeginOperationDelegate(this.OnBeginGetClass);
            }
            if ((this.onEndGetClassDelegate == null)) {
                this.onEndGetClassDelegate = new EndOperationDelegate(this.OnEndGetClass);
            }
            if ((this.onGetClassCompletedDelegate == null)) {
                this.onGetClassCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetClassCompleted);
            }
            base.InvokeAsync(this.onBeginGetClassDelegate, new object[] {
                        random,
                        classKbn}, this.onEndGetClassDelegate, this.onGetClassCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SlvHanbaiClient.svcClass.svcClass.BeginChkClassExist(string random, int classKbn, string Id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginChkClassExist(random, classKbn, Id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string SlvHanbaiClient.svcClass.svcClass.EndChkClassExist(System.IAsyncResult result) {
            return base.Channel.EndChkClassExist(result);
        }
        
        private System.IAsyncResult OnBeginChkClassExist(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string random = ((string)(inValues[0]));
            int classKbn = ((int)(inValues[1]));
            string Id = ((string)(inValues[2]));
            return ((SlvHanbaiClient.svcClass.svcClass)(this)).BeginChkClassExist(random, classKbn, Id, callback, asyncState);
        }
        
        private object[] OnEndChkClassExist(System.IAsyncResult result) {
            string retVal = ((SlvHanbaiClient.svcClass.svcClass)(this)).EndChkClassExist(result);
            return new object[] {
                    retVal};
        }
        
        private void OnChkClassExistCompleted(object state) {
            if ((this.ChkClassExistCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ChkClassExistCompleted(this, new ChkClassExistCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ChkClassExistAsync(string random, int classKbn, string Id) {
            this.ChkClassExistAsync(random, classKbn, Id, null);
        }
        
        public void ChkClassExistAsync(string random, int classKbn, string Id, object userState) {
            if ((this.onBeginChkClassExistDelegate == null)) {
                this.onBeginChkClassExistDelegate = new BeginOperationDelegate(this.OnBeginChkClassExist);
            }
            if ((this.onEndChkClassExistDelegate == null)) {
                this.onEndChkClassExistDelegate = new EndOperationDelegate(this.OnEndChkClassExist);
            }
            if ((this.onChkClassExistCompletedDelegate == null)) {
                this.onChkClassExistCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnChkClassExistCompleted);
            }
            base.InvokeAsync(this.onBeginChkClassExistDelegate, new object[] {
                        random,
                        classKbn,
                        Id}, this.onEndChkClassExistDelegate, this.onChkClassExistCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SlvHanbaiClient.svcClass.svcClass.BeginUpdateClass(string random, System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcClass.EntityClass> entity, int classKbn, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateClass(random, entity, classKbn, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string SlvHanbaiClient.svcClass.svcClass.EndUpdateClass(System.IAsyncResult result) {
            return base.Channel.EndUpdateClass(result);
        }
        
        private System.IAsyncResult OnBeginUpdateClass(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string random = ((string)(inValues[0]));
            System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcClass.EntityClass> entity = ((System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcClass.EntityClass>)(inValues[1]));
            int classKbn = ((int)(inValues[2]));
            return ((SlvHanbaiClient.svcClass.svcClass)(this)).BeginUpdateClass(random, entity, classKbn, callback, asyncState);
        }
        
        private object[] OnEndUpdateClass(System.IAsyncResult result) {
            string retVal = ((SlvHanbaiClient.svcClass.svcClass)(this)).EndUpdateClass(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateClassCompleted(object state) {
            if ((this.UpdateClassCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateClassCompleted(this, new UpdateClassCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateClassAsync(string random, System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcClass.EntityClass> entity, int classKbn) {
            this.UpdateClassAsync(random, entity, classKbn, null);
        }
        
        public void UpdateClassAsync(string random, System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcClass.EntityClass> entity, int classKbn, object userState) {
            if ((this.onBeginUpdateClassDelegate == null)) {
                this.onBeginUpdateClassDelegate = new BeginOperationDelegate(this.OnBeginUpdateClass);
            }
            if ((this.onEndUpdateClassDelegate == null)) {
                this.onEndUpdateClassDelegate = new EndOperationDelegate(this.OnEndUpdateClass);
            }
            if ((this.onUpdateClassCompletedDelegate == null)) {
                this.onUpdateClassCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateClassCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateClassDelegate, new object[] {
                        random,
                        entity,
                        classKbn}, this.onEndUpdateClassDelegate, this.onUpdateClassCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override SlvHanbaiClient.svcClass.svcClass CreateChannel() {
            return new svcClassClientChannel(this);
        }
        
        private class svcClassClientChannel : ChannelBase<SlvHanbaiClient.svcClass.svcClass>, SlvHanbaiClient.svcClass.svcClass {
            
            public svcClassClientChannel(System.ServiceModel.ClientBase<SlvHanbaiClient.svcClass.svcClass> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetClass(string random, int classKbn, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = random;
                _args[1] = classKbn;
                System.IAsyncResult _result = base.BeginInvoke("GetClass", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcClass.EntityClass> EndGetClass(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcClass.EntityClass> _result = ((System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcClass.EntityClass>)(base.EndInvoke("GetClass", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginChkClassExist(string random, int classKbn, string Id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = random;
                _args[1] = classKbn;
                _args[2] = Id;
                System.IAsyncResult _result = base.BeginInvoke("ChkClassExist", _args, callback, asyncState);
                return _result;
            }
            
            public string EndChkClassExist(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("ChkClassExist", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateClass(string random, System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcClass.EntityClass> entity, int classKbn, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = random;
                _args[1] = entity;
                _args[2] = classKbn;
                System.IAsyncResult _result = base.BeginInvoke("UpdateClass", _args, callback, asyncState);
                return _result;
            }
            
            public string EndUpdateClass(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("UpdateClass", _args, result)));
                return _result;
            }
        }
    }
}
