//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.237
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace SlvHanbaiClient.svcCondition {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityCondition", Namespace="http://schemas.datacontract.org/2004/07/SlvHanbai.Web.Class.Entity")]
    public partial class EntityCondition : SlvHanbaiClient.svcCondition.EntityBase {
        
        private int _condition_divition_idField;
        
        private int _display_division_idField;
        
        private string _display_division_nmField;
        
        private string _idField;
        
        private int _lock_flgField;
        
        private string _memoField;
        
        private string _nameField;
        
        private int _rec_noField;
        
        private string messageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int _condition_divition_id {
            get {
                return this._condition_divition_idField;
            }
            set {
                if ((this._condition_divition_idField.Equals(value) != true)) {
                    this._condition_divition_idField = value;
                    this.RaisePropertyChanged("_condition_divition_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int _display_division_id {
            get {
                return this._display_division_idField;
            }
            set {
                if ((this._display_division_idField.Equals(value) != true)) {
                    this._display_division_idField = value;
                    this.RaisePropertyChanged("_display_division_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string _display_division_nm {
            get {
                return this._display_division_nmField;
            }
            set {
                if ((object.ReferenceEquals(this._display_division_nmField, value) != true)) {
                    this._display_division_nmField = value;
                    this.RaisePropertyChanged("_display_division_nm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string _id {
            get {
                return this._idField;
            }
            set {
                if ((object.ReferenceEquals(this._idField, value) != true)) {
                    this._idField = value;
                    this.RaisePropertyChanged("_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int _lock_flg {
            get {
                return this._lock_flgField;
            }
            set {
                if ((this._lock_flgField.Equals(value) != true)) {
                    this._lock_flgField = value;
                    this.RaisePropertyChanged("_lock_flg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string _memo {
            get {
                return this._memoField;
            }
            set {
                if ((object.ReferenceEquals(this._memoField, value) != true)) {
                    this._memoField = value;
                    this.RaisePropertyChanged("_memo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string _name {
            get {
                return this._nameField;
            }
            set {
                if ((object.ReferenceEquals(this._nameField, value) != true)) {
                    this._nameField = value;
                    this.RaisePropertyChanged("_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int _rec_no {
            get {
                return this._rec_noField;
            }
            set {
                if ((this._rec_noField.Equals(value) != true)) {
                    this._rec_noField = value;
                    this.RaisePropertyChanged("_rec_no");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string message {
            get {
                return this.messageField;
            }
            set {
                if ((object.ReferenceEquals(this.messageField, value) != true)) {
                    this.messageField = value;
                    this.RaisePropertyChanged("message");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityBase", Namespace="http://schemas.datacontract.org/2004/07/SlvHanbai.Web.Class.Entity")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SlvHanbaiClient.svcCondition.EntityCondition))]
    public partial class EntityBase : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="svcCondition.svcCondition")]
    public interface svcCondition {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:svcCondition/GetCondition", ReplyAction="urn:svcCondition/GetConditionResponse")]
        System.IAsyncResult BeginGetCondition(string random, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcCondition.EntityCondition> EndGetCondition(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:svcCondition/UpdateCondition", ReplyAction="urn:svcCondition/UpdateConditionResponse")]
        System.IAsyncResult BeginUpdateCondition(string random, System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcCondition.EntityCondition> entity, System.AsyncCallback callback, object asyncState);
        
        string EndUpdateCondition(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface svcConditionChannel : SlvHanbaiClient.svcCondition.svcCondition, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetConditionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetConditionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcCondition.EntityCondition> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcCondition.EntityCondition>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateConditionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateConditionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class svcConditionClient : System.ServiceModel.ClientBase<SlvHanbaiClient.svcCondition.svcCondition>, SlvHanbaiClient.svcCondition.svcCondition {
        
        private BeginOperationDelegate onBeginGetConditionDelegate;
        
        private EndOperationDelegate onEndGetConditionDelegate;
        
        private System.Threading.SendOrPostCallback onGetConditionCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateConditionDelegate;
        
        private EndOperationDelegate onEndUpdateConditionDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateConditionCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public svcConditionClient() {
        }
        
        public svcConditionClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public svcConditionClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public svcConditionClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public svcConditionClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("CookieContainer を設定できません。バインドに HttpCookieContainerBindingElement が含まれていることを確認してくだ" +
                            "さい。");
                }
            }
        }
        
        public event System.EventHandler<GetConditionCompletedEventArgs> GetConditionCompleted;
        
        public event System.EventHandler<UpdateConditionCompletedEventArgs> UpdateConditionCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SlvHanbaiClient.svcCondition.svcCondition.BeginGetCondition(string random, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCondition(random, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcCondition.EntityCondition> SlvHanbaiClient.svcCondition.svcCondition.EndGetCondition(System.IAsyncResult result) {
            return base.Channel.EndGetCondition(result);
        }
        
        private System.IAsyncResult OnBeginGetCondition(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string random = ((string)(inValues[0]));
            return ((SlvHanbaiClient.svcCondition.svcCondition)(this)).BeginGetCondition(random, callback, asyncState);
        }
        
        private object[] OnEndGetCondition(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcCondition.EntityCondition> retVal = ((SlvHanbaiClient.svcCondition.svcCondition)(this)).EndGetCondition(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetConditionCompleted(object state) {
            if ((this.GetConditionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetConditionCompleted(this, new GetConditionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetConditionAsync(string random) {
            this.GetConditionAsync(random, null);
        }
        
        public void GetConditionAsync(string random, object userState) {
            if ((this.onBeginGetConditionDelegate == null)) {
                this.onBeginGetConditionDelegate = new BeginOperationDelegate(this.OnBeginGetCondition);
            }
            if ((this.onEndGetConditionDelegate == null)) {
                this.onEndGetConditionDelegate = new EndOperationDelegate(this.OnEndGetCondition);
            }
            if ((this.onGetConditionCompletedDelegate == null)) {
                this.onGetConditionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetConditionCompleted);
            }
            base.InvokeAsync(this.onBeginGetConditionDelegate, new object[] {
                        random}, this.onEndGetConditionDelegate, this.onGetConditionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SlvHanbaiClient.svcCondition.svcCondition.BeginUpdateCondition(string random, System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcCondition.EntityCondition> entity, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateCondition(random, entity, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string SlvHanbaiClient.svcCondition.svcCondition.EndUpdateCondition(System.IAsyncResult result) {
            return base.Channel.EndUpdateCondition(result);
        }
        
        private System.IAsyncResult OnBeginUpdateCondition(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string random = ((string)(inValues[0]));
            System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcCondition.EntityCondition> entity = ((System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcCondition.EntityCondition>)(inValues[1]));
            return ((SlvHanbaiClient.svcCondition.svcCondition)(this)).BeginUpdateCondition(random, entity, callback, asyncState);
        }
        
        private object[] OnEndUpdateCondition(System.IAsyncResult result) {
            string retVal = ((SlvHanbaiClient.svcCondition.svcCondition)(this)).EndUpdateCondition(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateConditionCompleted(object state) {
            if ((this.UpdateConditionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateConditionCompleted(this, new UpdateConditionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateConditionAsync(string random, System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcCondition.EntityCondition> entity) {
            this.UpdateConditionAsync(random, entity, null);
        }
        
        public void UpdateConditionAsync(string random, System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcCondition.EntityCondition> entity, object userState) {
            if ((this.onBeginUpdateConditionDelegate == null)) {
                this.onBeginUpdateConditionDelegate = new BeginOperationDelegate(this.OnBeginUpdateCondition);
            }
            if ((this.onEndUpdateConditionDelegate == null)) {
                this.onEndUpdateConditionDelegate = new EndOperationDelegate(this.OnEndUpdateCondition);
            }
            if ((this.onUpdateConditionCompletedDelegate == null)) {
                this.onUpdateConditionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateConditionCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateConditionDelegate, new object[] {
                        random,
                        entity}, this.onEndUpdateConditionDelegate, this.onUpdateConditionCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override SlvHanbaiClient.svcCondition.svcCondition CreateChannel() {
            return new svcConditionClientChannel(this);
        }
        
        private class svcConditionClientChannel : ChannelBase<SlvHanbaiClient.svcCondition.svcCondition>, SlvHanbaiClient.svcCondition.svcCondition {
            
            public svcConditionClientChannel(System.ServiceModel.ClientBase<SlvHanbaiClient.svcCondition.svcCondition> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetCondition(string random, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = random;
                System.IAsyncResult _result = base.BeginInvoke("GetCondition", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcCondition.EntityCondition> EndGetCondition(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcCondition.EntityCondition> _result = ((System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcCondition.EntityCondition>)(base.EndInvoke("GetCondition", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateCondition(string random, System.Collections.ObjectModel.ObservableCollection<SlvHanbaiClient.svcCondition.EntityCondition> entity, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = random;
                _args[1] = entity;
                System.IAsyncResult _result = base.BeginInvoke("UpdateCondition", _args, callback, asyncState);
                return _result;
            }
            
            public string EndUpdateCondition(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("UpdateCondition", _args, result)));
                return _result;
            }
        }
    }
}
